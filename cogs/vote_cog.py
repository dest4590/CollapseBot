from datetime import datetime, timedelta

import discord
from discord.ext import commands, tasks
from loguru import logger

import config
from utils.helpers import is_staff


class VotingCog(commands.Cog):
    def __init__(self, bot: discord.Bot):
        self.bot = bot
        self.voting_channel_id = 1352295334470225951
        self.vote_threshold = 10
        self.admin_role_ids = config.ADMIN_ROLES
        self.active_votes = {}
        self.check_votes.start()

    def cog_unload(self):
        self.check_votes.cancel()

    @tasks.loop(hours=1)
    async def check_votes(self):
        current_time = datetime.utcnow()

        for thread_id, data in list(self.active_votes.items()):
            if current_time >= data["end_time"]:
                try:
                    thread = self.bot.get_channel(thread_id)
                    if not isinstance(thread, discord.Thread):
                        continue

                    message = await thread.fetch_message(data["message_id"])
                    reactions = message.reactions

                    yes_votes = next(
                        (r.count - 1 for r in reactions if str(r.emoji) == "‚úÖ"), 0
                    )
                    no_votes = next(
                        (r.count - 1 for r in reactions if str(r.emoji) == "‚ùå"), 0
                    )

                    if yes_votes >= self.vote_threshold:
                        admin_mentions = " ".join(
                            [f"<@&{role_id}>" for role_id in self.admin_role_ids]
                        )
                        embed = discord.Embed(
                            title="üîî –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è",
                            description=f"–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ {thread.mention} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π!",
                            color=0x00FF88,
                        )
                        embed.add_field(
                            name="‚úÖ –ì–æ–ª–æ—Å–æ–≤ –∑–∞", value=str(yes_votes), inline=True
                        )
                        embed.add_field(
                            name="‚ùå –ì–æ–ª–æ—Å–æ–≤ –ø—Ä–æ—Ç–∏–≤", value=str(no_votes), inline=True
                        )
                        embed.add_field(
                            name="–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ",
                            value=f"{admin_mentions} –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞.",
                            inline=False,
                        )
                        await thread.send(embed=embed)

                    await thread.edit(archived=True)
                    del self.active_votes[thread_id]
                    logger.info(
                        f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤–µ—Ç–∫–∏ {thread_id}: {yes_votes} –∑–∞, {no_votes} –ø—Ä–æ—Ç–∏–≤"
                    )

                except discord.HTTPException as e:
                    logger.error(
                        f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤–µ—Ç–∫–∏ {thread_id}: {e}"
                    )

    @commands.Cog.listener()
    async def on_thread_create(self, thread: discord.Thread):
        if thread.parent_id != self.voting_channel_id:
            return

        try:
            embed = discord.Embed(
                title="üó≥Ô∏è –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞",
                description="–ü—Ä–æ–≥–æ–ª–æ—Å—É–π—Ç–µ, —Å—Ç–æ–∏—Ç –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –≤ CollapseLoader.",
                color=0x5865F2,
            )
            embed.add_field(
                name="‚úÖ –ó–∞",
                value="–ù–∞–∂–º–∏—Ç–µ ‚úÖ, —á—Ç–æ–±—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ",
                inline=False,
            )
            embed.add_field(
                name="‚ùå –ü—Ä–æ—Ç–∏–≤",
                value="–ù–∞–∂–º–∏—Ç–µ ‚ùå, —á—Ç–æ–±—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–∏–≤",
                inline=False,
            )
            embed.set_footer(text="–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞")

            message = await thread.send(embed=embed)
            await message.add_reaction("‚úÖ")
            await message.add_reaction("‚ùå")

            self.active_votes[thread.id] = {
                "message_id": message.id,
                "end_time": datetime.utcnow() + timedelta(hours=24),
            }
            logger.info(f"–ù–∞—á–∞—Ç–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –≤ –≤–µ—Ç–∫–µ {thread.id}")

        except discord.HTTPException as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –≤ –≤–µ—Ç–∫–µ {thread.id}: {e}")

    @commands.slash_command(
        name="vote_status", description="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π"
    )
    async def vote_status(self, ctx: discord.ApplicationContext):
        if not (isinstance(ctx.author, discord.Member) and is_staff(ctx.author)):
            embed = discord.Embed(
                title="‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω",
                description="–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—É.",
                color=0xFF4444,
            )
            await ctx.respond(embed=embed, ephemeral=True)
            return

        await ctx.defer()

        if not self.active_votes:
            embed = discord.Embed(
                title="üìä –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π",
                description="–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤.",
                color=0xFFAA00,
            )
            await ctx.respond(embed=embed, ephemeral=True)
            return

        embed = discord.Embed(
            title="üìä –ê–∫—Ç–∏–≤–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è",
            description=f"–¢–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤: {len(self.active_votes)}",
            color=0x00FF88,
        )

        for thread_id, data in self.active_votes.items():
            thread = self.bot.get_channel(thread_id)
            if isinstance(thread, discord.Thread):
                time_left = data["end_time"] - datetime.utcnow()
                hours_left = time_left.total_seconds() / 3600
                embed.add_field(
                    name=f"–í–µ—Ç–∫–∞: {thread.name}",
                    value=f"ID —Å–æ–æ–±—â–µ–Ω–∏—è: {data['message_id']}\n–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: {hours_left:.1f} —á–∞—Å–æ–≤",
                    inline=False,
                )

        await ctx.respond(embed=embed, ephemeral=True)

    @commands.slash_command(
        name="end_vote", description="–ó–∞–≤–µ—Ä—à–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –≤—Ä—É—á–Ω—É—é"
    )
    async def end_vote(self, ctx: discord.ApplicationContext):
        if ctx.author.id != config.ADMIN_USER_ID:
            embed = discord.Embed(
                title="‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω",
                description="–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                color=0xFF4444,
            )
            await ctx.respond(embed=embed, ephemeral=True)
            return

        await ctx.defer()

        thread = ctx.channel
        if not isinstance(thread, discord.Thread):
            embed = discord.Embed(
                title="‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –≤–µ—Ç–∫–∞",
                description="–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –≤–µ—Ç–∫–∏.",
                color=0xFF4444,
            )
            await ctx.respond(embed=embed, ephemeral=True)
            return

        thread_id = thread.id
        if thread_id not in self.active_votes:
            embed = discord.Embed(
                title="‚ùå –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
                description="–ê–∫—Ç–∏–≤–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–π –≤–µ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.",
                color=0xFF4444,
            )
            await ctx.respond(embed=embed, ephemeral=True)
            return

        try:
            del self.active_votes[thread_id]
            embed = discord.Embed(
                title="‚úÖ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ",
                description="–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –≤ —ç—Ç–æ–π –≤–µ—Ç–∫–µ –±—ã–ª–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –≤—Ä—É—á–Ω—É—é.",
                color=0x00FF88,
            )
            await ctx.respond(embed=embed, ephemeral=True)
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤–µ—Ç–∫–∏ {thread_id}: {e}")
            embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                color=0xFF4444,
            )
            await ctx.respond(embed=embed, ephemeral=True)


def setup(bot: discord.Bot):
    bot.add_cog(VotingCog(bot))
